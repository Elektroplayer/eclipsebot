/*

               -- –í–ù–ò–ú–ê–ù–ò–ï! --

      –î–∞–Ω–Ω—ã–π –∫–æ–¥ –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∞!
    –ï–ì–û –ù–ï–õ–¨–ó–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô!
 –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –º–æ–¥–µ–ª—å!

           -- –í–´ –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–´! --
 
*/

import Listener from '../structures/Listener.js'
import chalk from 'chalk'

const settings = {
    'messageID': '911527669131259945',
    'entry': [{
        'emoji': '‚åö',
        'role': '897504759278358529'
    },{
        'emoji': 'üåº',
        'role': '906949200850354196'
    },{
        'emoji': 'üñï',
        'role': '891238283550527508'
    },{
        'emoji': 'ü©∏',
        'role': '889799344184762378'
    },{
        'emoji': 'üçÉ',
        'role': '889796522080882688'
    }]
}


export default [
    class ReactAddListener extends Listener {
        constructor (...args) {
            super(...args)
            this.event = 'messageReactionAdd'
        }

        async exec(reaction, user) {
            //  –ö–æ–≥–¥–∞ –Ω–∞—Å—Ç–∞–Ω–µ—Ç –≤—Ä–µ–º—è –∏ –ø—Ä–∏–¥—É—Ç –¥–≤–∞ –≤—Å–∞–¥–Ω–∏–∫–∞ –∑–¥—Ä–∞–≤–æ–≥–æ —Å–º—ã—Å–ª–∞, —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —Ä–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è
            //const settings = await RoleReaction.findOne({messageID: reaction.message.id, guildID: reaction.message.guild.id}).exec()

            // –ï—Å–ª–∏ –µ–∞–∫—Ü–∏—é –ø–æ—Å—Ç–∞–≤–∏–ª –±–æ—Ç –∏–ª–∏ –≤–æ–æ–±—â–µ –≤–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞
            if ( user.bot || !reaction.message.guild) return
    
            let guild      = reaction.message.guild
            let roles      = guild.roles.cache
            let member     = guild.members.cache.get(user.id)
            let emoji_name = reaction.emoji.name
            let emoji_id   = reaction.emoji.id
    
            if(!settings.entry.find(elm => elm.emoji == emoji_name || elm.emoji == emoji_id)) return
    
            let role = roles.get(settings.entry.find(elm => elm.emoji == emoji_name || elm.emoji == emoji_id).role) // roles.get(settings.roles[emoji_name] || settings.roles[emoji_id])
            if (!role) return
    
            await member.roles.add(role).catch(async e => {
                if (e.code === 50013) return
                else {
                    console.log(chalk.red('[ERR] [RoleReaction] ') + '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!')
                    console.log(e)
                }
            })
        }
    },

    class ReactRemoveListener extends Listener {
        constructor (...args) {
            super(...args)
            this.event = 'messageReactionRemove'
        }

        async exec(reaction, user) {
            // –ï—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏—é –ø–æ—Å—Ç–∞–≤–∏–ª –±–æ—Ç –∏–ª–∏ –≤–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞
            if (user.bot || !reaction.message.guild) return
    
            let guild         = reaction.message.guild
            let roles         = guild.roles.cache
            let member        = guild.members.cache.get(user.id)
            let emoji_name    = reaction.emoji.name
            let emoji_id      = reaction.emoji.id
    
            if(!settings.entry.find(elm => elm.emoji == emoji_name || elm.emoji == emoji_id)) return
            
            let role = roles.get(settings.entry.find(elm => elm.emoji == emoji_name || elm.emoji == emoji_id).role)
            if (!role) return
    
            await member.roles.remove(role).catch(async e => {
                if (e.code === 50013) return
                else {
                    console.log(chalk.red('[ERR] [RoleReaction] ') + '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞!')
                    console.log(e)
                }
            })
        }
    }
]
